# name       : innodb_swap_builtin_plugin.patch
# introduced : 11 or before
# maintainer : Yasufumi
#
#!!! notice !!!
# Any small change to this file in the main branch
# should be done or reviewed by the maintainer!
--- a/mysql-test/include/have_innodb_plugin.inc
+++ b/mysql-test/include/have_innodb_plugin.inc
@@ -1,5 +1,5 @@
 --source include/not_embedded.inc
 disable_query_log;
 --require r/true.require
-SELECT (plugin_library LIKE 'ha_innodb_plugin%') AS `TRUE` FROM information_schema.plugins WHERE LOWER(plugin_name) = 'innodb' AND LOWER(plugin_status) = 'active';
+select (support = 'YES' or support = 'DEFAULT' or support = 'ENABLED') as `TRUE` from information_schema.engines where engine = 'innodb';
 enable_query_log;
--- a/mysql-test/include/read_many_rows.inc
+++ b/mysql-test/include/read_many_rows.inc
@@ -112,8 +112,12 @@
 insert into t1 values(1);
 
 connection con2;
---error 1213
+#InnoDB Plugin treats this situation as "timeout" not "deadlock"
+#So, we need to rollback
+#--error 1213
+--error 1205
 reap;
+rollback;
 select @a;
 # check that the whole transaction was rolled back
 select * from t2;
@@ -134,6 +138,9 @@
 
 connection con2;
 reap;
+#InnoDB Plugin treats this situation as "timeout" not "deadlock"
+#So, we need to rollback
+rollback;
 select @a,@b;
 # check that the whole transaction was rolled back
 select * from t2;
@@ -155,6 +162,9 @@
 
 connection con2;
 reap;
+#InnoDB Plugin treats this situation as "timeout" not "deadlock"
+#So, we need to rollback
+rollback;
 # check that the whole transaction was rolled back
 select * from t2;
 
--- a/mysql-test/lib/mtr_cases.pm
+++ b/mysql-test/lib/mtr_cases.pm
@@ -944,7 +944,7 @@
     push(@{$tinfo->{'slave_opt'}}, "--loose-federated");
   }
 
-  if ( $tinfo->{'innodb_test'} )
+  if ( $tinfo->{'innodb_test'} || $tinfo->{'innodb_plugin_test'} )
   {
     # This is a test that needs innodb
     if ( $::mysqld_variables{'innodb'} eq "OFF" ||
@@ -956,36 +956,6 @@
       return $tinfo;
     }
   }
-  elsif ( $tinfo->{'innodb_plugin_test'} )
-  {
-    # This is a test that needs the innodb plugin
-    if (!&find_innodb_plugin)
-    {
-      # innodb plugin is not supported, skip it
-      $tinfo->{'skip'}= 1;
-      $tinfo->{'comment'}= "No innodb plugin support";
-      return $tinfo;
-    }
-
-    my $sep= (IS_WINDOWS) ? ';' : ':';
-    my $plugin_filename= basename($lib_innodb_plugin);
-    my $plugin_list=
-      "innodb=$plugin_filename$sep" .
-      "innodb_trx=$plugin_filename$sep" .
-      "innodb_locks=$plugin_filename$sep" .
-      "innodb_lock_waits=$plugin_filename$sep" .
-      "innodb_cmp=$plugin_filename$sep" .
-      "innodb_cmp_reset=$plugin_filename$sep" .
-      "innodb_cmpmem=$plugin_filename$sep" .
-      "innodb_cmpmem_reset=$plugin_filename";
-
-    foreach my $k ('master_opt', 'slave_opt') 
-    {
-      push(@{$tinfo->{$k}}, '--ignore-builtin-innodb');
-      push(@{$tinfo->{$k}}, '--plugin-dir=' . dirname($lib_innodb_plugin));
-      push(@{$tinfo->{$k}}, "--plugin-load=$plugin_list");
-    }
-  }
   else
   {
     push(@{$tinfo->{'master_opt'}}, "--loose-skip-innodb");
--- a/mysql-test/r/innodb_ignore_builtin.result
+++ b/mysql-test/r/innodb_ignore_builtin.result
@@ -1,9 +1,11 @@
 show variables like 'ignore_builtin_innodb';
 Variable_name	Value
-ignore_builtin_innodb	ON
+ignore_builtin_innodb	OFF
 select PLUGIN_NAME from information_schema.plugins
 where PLUGIN_NAME = "InnoDb";
 PLUGIN_NAME
+InnoDB
 select ENGINE from information_schema.engines
 where ENGINE = "InnoDB";
 ENGINE
+InnoDB
--- a/mysql-test/r/read_many_rows_innodb.result
+++ b/mysql-test/r/read_many_rows_innodb.result
@@ -64,7 +64,8 @@
 insert into t2 values(123);
 insert into t1 values(1);
 insert into t1 values(1);
-ERROR 40001: Deadlock found when trying to get lock; try restarting transaction
+ERROR HY000: Lock wait timeout exceeded; try restarting transaction
+rollback;
 select @a;
 @a
 NULL
@@ -77,9 +78,10 @@
 insert into t2 values(123);
 call proc24989();
 insert into t1 values(1);
+rollback;
 select @a,@b;
 @a	@b
-exception	deadlock
+exception	NULL
 select * from t2;
 f2
 commit;
@@ -90,10 +92,9 @@
 call proc24989_2();
 insert into t1 values(1);
 commit;
-exception
-Outer handler
 continued
 continued
+rollback;
 select * from t2;
 f2
 drop procedure proc24989;
--- a/mysql-test/t/innodb_ignore_builtin-master.opt
+++ b/mysql-test/t/innodb_ignore_builtin-master.opt
@@ -1 +1 @@
---ignore_builtin_innodb
+
--- a/mysql-test/t/innodb_ignore_builtin.test
+++ b/mysql-test/t/innodb_ignore_builtin.test
@@ -1,3 +1,7 @@
+# For Percona Server this test is made a no-op, because ignore-builtin-innodb
+# is checked at the server startup time and the server aborts with an error
+# if it is found.  Ideally we would like to test this startup abort itself,
+# but MTR does not support that.
 #
 # Bug #42610:  Dynamic plugin broken in 5.1.31
 #
--- a/sql/mysqld.cc
+++ b/sql/mysqld.cc
@@ -8209,7 +8209,9 @@
     thd_startup_options|=OPTION_BIG_TABLES;
     break;
   case (int) OPT_IGNORE_BUILTIN_INNODB:
-    opt_ignore_builtin_innodb= 1;
+    sql_print_error("The option ignore-builtin-innodb is incompatible with "
+                    "Percona Server with XtraDB");
+    unireg_abort(1);
     break;
   case (int) OPT_ISAM_LOG:
     opt_myisam_log=1;
--- a/storage/innobase/plug.in
+++ b/storage/innobase/plug.in
@@ -1,7 +1,6 @@
 MYSQL_STORAGE_ENGINE(innobase, innodb, [InnoDB Storage Engine],
         [Transactional Tables using InnoDB], [max,max-no-ndb])
 MYSQL_PLUGIN_DIRECTORY(innobase, [storage/innobase])
-MYSQL_PLUGIN_STATIC(innobase,   [libinnobase.a])
 MYSQL_PLUGIN_DYNAMIC(innobase,  [ha_innodb.la])
 MYSQL_PLUGIN_ACTIONS(innobase,  [
   AC_CHECK_LIB(rt, aio_read, [innodb_system_libs="-lrt"])
--- a/storage/innodb_plugin/plug.in
+++ b/storage/innodb_plugin/plug.in
@@ -19,7 +19,7 @@
 MYSQL_PLUGIN_DIRECTORY(innodb_plugin, [storage/innodb_plugin])
 # Enable if you know what you are doing (trying to link both InnoDB and
 # InnoDB Plugin statically into MySQL does not work).
-#MYSQL_PLUGIN_STATIC(innodb_plugin, [libinnobase.a])
+MYSQL_PLUGIN_STATIC(innodb_plugin,   [libinnobase.a])
 MYSQL_PLUGIN_DYNAMIC(innodb_plugin,  [ha_innodb_plugin.la])
 MYSQL_PLUGIN_ACTIONS(innodb_plugin,  [
   AC_CHECK_HEADERS(sched.h)
