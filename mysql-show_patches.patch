diff -r a36b98c5e2e3 patch_info/show_patches.info
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/patch_info/show_patches.info	Mon Sep 08 16:38:33 2008 -0700
@@ -0,0 +1,6 @@
+File=show_patches.patch
+Name=SHOW PATCHES
+Version=1.0
+Author=Jeremy Cole
+License=N/A
+Comment
diff -r a36b98c5e2e3 sql/Makefile.am
--- a/sql/Makefile.am	Mon Sep 08 16:37:00 2008 -0700
+++ b/sql/Makefile.am	Mon Sep 08 16:38:33 2008 -0700
@@ -116,7 +116,7 @@
 			-DSHAREDIR="\"$(MYSQLSHAREdir)\"" \
 			@DEFS@
 
-BUILT_SOURCES =		sql_yacc.cc sql_yacc.h lex_hash.h
+BUILT_SOURCES =		sql_yacc.cc sql_yacc.h lex_hash.h patch_info.h
 EXTRA_DIST =		$(BUILT_SOURCES) nt_servc.cc nt_servc.h \
 			message.mc examples/CMakeLists.txt CMakeLists.txt \
 			udf_example.c udf_example.def
@@ -172,6 +172,8 @@
 udf_example_la_SOURCES= udf_example.c
 udf_example_la_LDFLAGS= -module -rpath $(pkglibdir)
 
+patch_info.h: patch_info.h.pl
+	$(PERL) $< > $@
 
 # Don't update the files from bitkeeper
 %::SCCS/s.%
diff -r a36b98c5e2e3 sql/Makefile.in
--- a/sql/Makefile.in	Mon Sep 08 16:37:00 2008 -0700
+++ b/sql/Makefile.in	Mon Sep 08 16:38:33 2008 -0700
@@ -556,7 +556,7 @@
 gen_lex_hash_LDADD = $(LDADD) $(CXXLDFLAGS)
 mysql_tzinfo_to_sql_SOURCES = mysql_tzinfo_to_sql.cc
 mysql_tzinfo_to_sql_LDADD = @MYSQLD_EXTRA_LDFLAGS@ $(LDADD) $(CXXLDFLAGS)
-BUILT_SOURCES = sql_yacc.cc sql_yacc.h lex_hash.h
+BUILT_SOURCES = sql_yacc.cc sql_yacc.h lex_hash.h patch_info.h
 EXTRA_DIST = $(BUILT_SOURCES) nt_servc.cc nt_servc.h \
 			message.mc examples/CMakeLists.txt CMakeLists.txt \
 			udf_example.c udf_example.def
@@ -1230,6 +1230,9 @@
 		./gen_lex_hash$(EXEEXT) > $@-t
 		$(MV) $@-t $@
 
+patch_info.h: patch_info.h.pl
+	$(PERL) $< > $@
+
 # Don't update the files from bitkeeper
 %::SCCS/s.%
 # Tell versions [3.59,3.63) of GNU make to not export all variables.
diff -r a36b98c5e2e3 sql/lex.h
--- a/sql/lex.h	Mon Sep 08 16:37:00 2008 -0700
+++ b/sql/lex.h	Mon Sep 08 16:38:33 2008 -0700
@@ -359,6 +359,7 @@
   { "PACK_KEYS",	SYM(PACK_KEYS_SYM)},
   { "PARTIAL",		SYM(PARTIAL)},
   { "PASSWORD",		SYM(PASSWORD)},
+  { "PATCHES",		SYM(PATCHES)},
   { "PHASE",            SYM(PHASE_SYM)},
   { "POINT",		SYM(POINT_SYM)},
   { "POLYGON",		SYM(POLYGON)},
diff -r a36b98c5e2e3 sql/mysql_priv.h
--- a/sql/mysql_priv.h	Mon Sep 08 16:37:00 2008 -0700
+++ b/sql/mysql_priv.h	Mon Sep 08 16:38:33 2008 -0700
@@ -948,6 +948,7 @@
 int mysqld_show_status(THD *thd);
 int mysqld_show_variables(THD *thd,const char *wild);
 bool mysqld_show_storage_engines(THD *thd);
+bool mysqld_show_patches(THD *thd);
 bool mysqld_show_privileges(THD *thd);
 bool mysqld_show_column_types(THD *thd);
 bool mysqld_help (THD *thd, const char *text);
diff -r a36b98c5e2e3 sql/patch_info.h.pl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/sql/patch_info.h.pl	Mon Sep 08 16:38:33 2008 -0700
@@ -0,0 +1,65 @@
+use strict;
+
+my $patch_info_path = '../patch_info';
+my $file = '';
+my $output = '';
+
+
+if (opendir(PATCH_DIR, $patch_info_path))
+{
+	while ((my $file = readdir(PATCH_DIR)))
+	{
+		open(PATCH_FILE, "<$patch_info_path/$file") || die("Unable to open $patch_info_path/$file ($!)");
+		my %fields;
+	
+		if ($file =~ /^\./)
+		{
+			next;
+		}	
+	
+		while (<PATCH_FILE>)
+		{
+			chomp;
+	
+			my ($key, $value) = split(/\s*=\s*/);
+			$fields{lc($key)} = $value;
+		}
+	
+		$output .= "{\"$fields{'file'}\", \"$fields{'name'}\", \"$fields{'version'}\", \"$fields{'author'}\", \"$fields{'license'}\",\"$fields{'comment'}\"},\n"
+	}
+}	
+
+print <<HEADER;
+
+/* Copyright (C) 2002-2006 MySQL AB
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; version 2 of the License.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA */
+
+#ifdef USE_PRAGMA_INTERFACE
+#pragma interface			/* gcc class implementation */
+#endif
+
+struct patch {
+	const char *file;
+	const char *name;
+	const char *version;
+	const char *author;
+	const char *license;
+	const char *comment;
+}patches[] = {
+$output
+{NULL, NULL, NULL, NULL}
+};	
+
+HEADER
diff -r a36b98c5e2e3 sql/sp_head.cc
--- a/sql/sp_head.cc	Mon Sep 08 16:37:00 2008 -0700
+++ b/sql/sp_head.cc	Mon Sep 08 16:38:33 2008 -0700
@@ -188,6 +188,7 @@
   case SQLCOM_SHOW_MUTEX_STATUS:
   case SQLCOM_SHOW_NEW_MASTER:
   case SQLCOM_SHOW_OPEN_TABLES:
+  case SQLCOM_SHOW_PATCHES:
   case SQLCOM_SHOW_PRIVILEGES:
   case SQLCOM_SHOW_PROCESSLIST:
   case SQLCOM_SHOW_SLAVE_HOSTS:
diff -r a36b98c5e2e3 sql/sql_lex.h
--- a/sql/sql_lex.h	Mon Sep 08 16:37:00 2008 -0700
+++ b/sql/sql_lex.h	Mon Sep 08 16:38:33 2008 -0700
@@ -81,9 +81,9 @@
   SQLCOM_SHOW_SLAVE_HOSTS, SQLCOM_DELETE_MULTI, SQLCOM_UPDATE_MULTI,
   SQLCOM_SHOW_BINLOG_EVENTS, SQLCOM_SHOW_NEW_MASTER, SQLCOM_DO,
   SQLCOM_SHOW_WARNS, SQLCOM_EMPTY_QUERY, SQLCOM_SHOW_ERRORS,
-  SQLCOM_SHOW_COLUMN_TYPES, SQLCOM_SHOW_STORAGE_ENGINES, SQLCOM_SHOW_PRIVILEGES,
-  SQLCOM_HELP, SQLCOM_CREATE_USER, SQLCOM_DROP_USER, SQLCOM_RENAME_USER,
-  SQLCOM_REVOKE_ALL, SQLCOM_CHECKSUM,
+  SQLCOM_SHOW_COLUMN_TYPES, SQLCOM_SHOW_PATCHES, SQLCOM_SHOW_STORAGE_ENGINES, 
+	SQLCOM_SHOW_PRIVILEGES, SQLCOM_HELP, SQLCOM_CREATE_USER, SQLCOM_DROP_USER, 
+	SQLCOM_RENAME_USER, SQLCOM_REVOKE_ALL, SQLCOM_CHECKSUM,
   SQLCOM_CREATE_PROCEDURE, SQLCOM_CREATE_SPFUNCTION, SQLCOM_CALL,
   SQLCOM_DROP_PROCEDURE, SQLCOM_ALTER_PROCEDURE,SQLCOM_ALTER_FUNCTION,
   SQLCOM_SHOW_CREATE_PROC, SQLCOM_SHOW_CREATE_FUNC,
diff -r a36b98c5e2e3 sql/sql_parse.cc
--- a/sql/sql_parse.cc	Mon Sep 08 16:37:00 2008 -0700
+++ b/sql/sql_parse.cc	Mon Sep 08 16:38:33 2008 -0700
@@ -3826,6 +3826,9 @@
     break;
   case SQLCOM_SHOW_STORAGE_ENGINES:
     res= mysqld_show_storage_engines(thd);
+    break;
+  case SQLCOM_SHOW_PATCHES:
+    res= mysqld_show_patches(thd);
     break;
   case SQLCOM_SHOW_PRIVILEGES:
     res= mysqld_show_privileges(thd);
diff -r a36b98c5e2e3 sql/sql_prepare.cc
--- a/sql/sql_prepare.cc	Mon Sep 08 16:37:00 2008 -0700
+++ b/sql/sql_prepare.cc	Mon Sep 08 16:38:33 2008 -0700
@@ -1790,6 +1790,7 @@
   case SQLCOM_SHOW_DATABASES:
   case SQLCOM_SHOW_PROCESSLIST:
   case SQLCOM_SHOW_STORAGE_ENGINES:
+  case SQLCOM_SHOW_PATCHES:
   case SQLCOM_SHOW_PRIVILEGES:
   case SQLCOM_SHOW_COLUMN_TYPES:
   case SQLCOM_SHOW_STATUS:
diff -r a36b98c5e2e3 sql/sql_show.cc
--- a/sql/sql_show.cc	Mon Sep 08 16:37:00 2008 -0700
+++ b/sql/sql_show.cc	Mon Sep 08 16:38:33 2008 -0700
@@ -22,6 +22,7 @@
 #include "sp.h"
 #include "sp_head.h"
 #include "sql_trigger.h"
+#include "patch_info.h"
 #include <my_dir.h>
 
 #ifdef HAVE_BERKELEY_DB
@@ -45,6 +46,48 @@
 static int
 view_store_create_info(THD *thd, TABLE_LIST *table, String *buff);
 static bool schema_table_store_record(THD *thd, TABLE *table);
+
+
+/***************************************************************************
+** List patches built into this release
+***************************************************************************/
+
+bool mysqld_show_patches(THD *thd)
+{
+  List<Item> field_list;
+       int i = 0;
+  Protocol *protocol= thd->protocol;
+  DBUG_ENTER("mysqld_show_patches");
+
+  field_list.push_back(new Item_empty_string("File", 255));
+  field_list.push_back(new Item_empty_string("Name", 50));
+  field_list.push_back(new Item_empty_string("Version", 10));
+  field_list.push_back(new Item_empty_string("Author", 50));
+  field_list.push_back(new Item_empty_string("License", 50));
+  field_list.push_back(new Item_empty_string("Comment", 32));
+
+  if (protocol->send_fields(&field_list, Protocol::SEND_NUM_ROWS | Protocol::SEND_EOF))
+    DBUG_RETURN(TRUE);
+
+       for (i = 0; patches[i].file; i++)
+       {
+         protocol->prepare_for_resend();
+       protocol->store(patches[i].file, system_charset_info);
+       protocol->store(patches[i].name, system_charset_info);
+       protocol->store(patches[i].version, system_charset_info);
+       protocol->store(patches[i].author, system_charset_info);
+       protocol->store(patches[i].license, system_charset_info);
+       protocol->store(patches[i].comment, system_charset_info);
+
+       if (protocol->write())
+       DBUG_RETURN(TRUE);
+       }       
+
+   
+  send_eof(thd);
+  DBUG_RETURN(FALSE);
+
+}
 
 
 /***************************************************************************
diff -r a36b98c5e2e3 sql/sql_yacc.yy
--- a/sql/sql_yacc.yy	Mon Sep 08 16:37:00 2008 -0700
+++ b/sql/sql_yacc.yy	Mon Sep 08 16:38:33 2008 -0700
@@ -816,6 +816,7 @@
 %token  PACK_KEYS_SYM
 %token  PARTIAL
 %token  PASSWORD
+%token  PATCHES
 %token  PARAM_MARKER
 %token  PHASE_SYM
 %token  POINTFROMTEXT
@@ -7948,7 +7949,7 @@
 	;
 
 show_param:
-         DATABASES wild_and_where
+        DATABASES wild_and_where
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
@@ -8048,6 +8049,10 @@
 	    LEX *lex=Lex;
 	    lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
 	    WARN_DEPRECATED("SHOW TABLE TYPES", "SHOW [STORAGE] ENGINES");
+	  }
+	| PATCHES
+	  {
+	    Lex->sql_command= SQLCOM_SHOW_PATCHES;
 	  }
 	| opt_storage ENGINES_SYM
 	  {
@@ -9466,6 +9471,7 @@
 	| PACK_KEYS_SYM		{}
 	| PARTIAL		{}
 	| PASSWORD		{}
+	| PATCHES {}
         | PHASE_SYM             {}
 	| POINT_SYM		{}
 	| POLYGON		{}
