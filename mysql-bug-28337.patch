From: igorDate: May 17 2007 8:00am
Subject: bk commit into 5.0 tree (igor:1.2490) BUG#28337

Below is the list of changes that have just been committed into a local
5.0 repository of igor. When igor does a push these changes will
be propagated to the main repository and, within 24 hours after the
push, to the public repository.
For information on how to access the public repository
see http://dev.mysql.com/doc/mysql/en/installing-source-tree.html

ChangeSet@stripped, 2007-05-16 23:00:28-07:00, igor@stripped +3 -0
  Fixed bug #28337: wrong results for grouping queries with correlated
  subqueries in WHERE conditions.
  This bug was introduced by the patch for bug 27321.

  mysql-test/r/subselect.result@stripped, 2007-05-16 23:00:26-07:00, igor@stripped +30 -0
    Added a test case for bug #28337.

  mysql-test/t/subselect.test@stripped, 2007-05-16 23:00:26-07:00, igor@stripped +24 -0
    Added a test case for bug #28337.

  sql/item.cc@stripped, 2007-05-16 23:00:27-07:00, igor@stripped +2 -1
    Fixed bug #28337: wrong results for grouping queries with correlated
    subqueries in WHERE conditions.
    This bug was introduced by the patch for bug 27321.
    
    Now in the Item_field::fix_outer_field function we create an Item_outer_ref
    object for an outer reference only if it is used in the SELECT list or
    in the HAVING clause of the subquery against which the reference is resolved.

# This is a BitKeeper patch.  What follows are the unified diffs for the
# set of deltas contained in the patch.  The rest of the patch, the part
# that BitKeeper cares about, is below these diffs.
# User:	igor
# Host:	olga.mysql.com
# Root:	/home/igor/dev-opt/mysql-5.0-opt-bug28337

--- 1.266/sql/item.cc	2007-05-16 23:00:35 -07:00
+++ 1.267/sql/item.cc	2007-05-16 23:00:35 -07:00
@@ -3503,7 +3503,8 @@
           prev_subselect_item->const_item_cache= 0;
           set_field(*from_field);
           if (!last_checked_context->select_lex->having_fix_field &&
-              select->group_list.elements)
+              select->group_list.elements &&
+              (place == SELECT_LIST || place == IN_HAVING))
           {
             Item_outer_ref *rf;
             /*


